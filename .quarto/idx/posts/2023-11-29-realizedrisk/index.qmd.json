{"title":"Simulation of Realized Infection Risk","markdown":{"yaml":{"title":"Simulation of Realized Infection Risk","description":"simulate a probability distribution of risk","author":[{"name":"Kayla Kauffman","url":"https://https://kmkauffm.github.io/","orcid":"0000-0002-4897-9428"}],"date":"2023-11-29","categories":["R","code","simulations"],"citation":{"url":"https://https://kmkauffm.github.io//posts/2023-11-29-realizedrisk/"},"image":"schema.png","draft":true},"headingText":"Background","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n#| message: false\n\nlibrary(spDataLarge)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(SiMRiv)\nlibrary(patchwork)\n\ntheme_set(theme_bw())\ntheme_update(plot.title = element_text(hjust = 0.5))\n```\n\nRisk maps are used to describe the places where people (or animals) are most likely to be exposed to infectious disease. However, the time an individual spends in a place is not the only predictor of infection. The activity a person does in a location may influence if they are exposed to the disease, for example a person wearing shoes in an environment with a lot of soil transmitted helminths is at low infection risk because they are wearing shoes, thus not directly exposed to the contaminated soil. The person's immunity or susceptibility to an infection also influences their infection risk.  \nBefore creating a model with real data mapping people's land use to their infection status I want to build a simulation of how I think the model will work. First, I want to compare people that infection probabilities in people \"vibrating\" in place (Brownian motion) and to people traversing the landscape in corridors (Levian motion). I'll then use this model to test how much susceptibility can vary before there is no correlation between the time people spend in risky places and their infection risk. *Asking: Do risk maps even work given individual heterogenetiy in susceptibility?*  \n\n## Make a Risk Map  \n\nRisk across the landscape likely has a lot of spatial autocorrelation and relates to underlying environmental features. Instead of simulating this, I am using the spDataLarge elevation raster data the Zion National Park area as the *risk map*.  \n\n```{r}\nriskmap <- rast(system.file(\"raster/srtm.tif\", package = \"spDataLarge\"))\n\n## change into utm so easier to do the simulated tracks\nriskmap <- project(riskmap, \"EPSG:26912\")\n\n## make values [0,1]\nriskmap <- riskmap/2891.000\n\n## make resolution lower so things run quickly\nriskmap <- aggregate(riskmap, fact=5, fun=\"mean\")\n\n## make square\ntmp <- vect(ext(riskmap)-5000, crs=crs(riskmap))\nriskmap <- crop(riskmap, tmp)\n\n## quick plot\nplot(riskmap)\nriskmap\n\n## find dimensions of area so can choose step lengths\nrisk_bb <- ext(riskmap)\n# risk_bb[2]-risk_bb[1]\n# risk_bb[4]-risk_bb[3]\n## ~35km x 43km\n## make slightly smaller so indivdiuals not on edge\nrisk_bb <- risk_bb + c(5000, -5000, 5000, -5000)\n\n## save cell size\ncell_size = res(riskmap)[1]\n\n## save crs\ncrs_risk <- crs(riskmap)\n```\n\n## Simulate movement  \nhttps://cran.r-project.org/web/packages/SiMRiv/vignettes/SiMRiv.pdf\n\n### Brownian  \nSimulate vibrating, Brownian movement of individuals basically vibrating in place with each individuals' starting location distributed throughout the risk map area  \n\n```{r}\n## one type of movement with a random walk with step lengths relative \nrand.walker <- species(state(concentration = 0, #random\n                             pwind = perceptualRange(\"gaussian\", 1),\n                             steplen = 10,\n                             name = \"tight_random\"))\n\n## generate random starting points (might change to regular or increase n)\n### avoid edges\naoi <- buffer(vect(ext(riskmap)),-2000)\naoi <- crop(riskmap, aoi)\n\nstart_coord <- spatSample(aoi, \n                          100,\n                  method = \"random\",\n                  as.points = TRUE,\n                  values = F)\nplot(riskmap);points(start_coord)\n\n## need those as a nx2 matrix\nstart_coord_mat <- as.matrix(as.data.frame(start_coord, geom=\"xy\"))\n\n## simulate single state walks of 1000 steps\nsim.rw <- list()\nfor (i in 1:100) {\n  tmp <- simulate(rand.walker, 1000,\n                   coords = start_coord_mat[i,])\n  sim.rw[[i]] <- cbind(tmp[,1], tmp[,2])\n}\n\n### make into vect\nsim.rw.sp1 <- lapply(sim.rw, vect, crs = crs_risk)\n## plot it\n# plot(sim.rw.sp[[1]])\n# plot(riskmap); lines(sim.rw[[1]])\nplot(riskmap); invisible(lapply(sim.rw, FUN = lines))\n```\n\n### Levian (Correlated Walks)  \nNeed to make a resistance raster to get correlated walk\n```{r}\n#| message: false\n\nLevyWalker <- species(\n\t(state.RW() * 100 + 10) + (state.CRW(0.97) * 500 + 50)\n, transitionMatrix(0.005, 0.001))\n\n## basemaps for resistance\nlandcover <- resistanceFromShape(\nsystem.file(\"doc/landcover.shp\", package=\"SiMRiv\")\n, res = 50, field = \"coverclass\", mapvalues = c(\n\"forest\" = 0.5, \"urban\" = 1, \"dam\" = 0\n, \"shrubland\" = 0.75), background = 0.95)\n \nriver.shape <- sf::st_read(system.file(\"doc/river-sample.shp\", package=\"SiMRiv\"))\n\n## resistence surface\nresistance <- resistanceFromShape(system.file(\"doc/river-sample.shp\", package=\"SiMRiv\"),\n                                       baseRaster = landcover,\n                                       buffer = 100, field = 0,\n                                       background = 0.95, margin = 3000)\n# buffer here is just some magical function to convert river\n# order into a meaningful value in the [0, 1] range!\n\nplot(resistance, axes = F)\nresistance\n\n## change that to be in the same spot as the riskmap\nnew.resist <- rast(extent=ext(aoi),\n               nrow=dim(resistance)[1], ncol=dim(resistance)[2],\n               crs = crs_risk,\n               vals = values(resistance))\nnew.resist <- aggregate(new.resist, fact = 10, fun = \"mean\", na.rm = TRUE)\nplot(new.resist)\n\n## new starting coords in areas of low resistance so don't get stuck\ninit = xyFromCell(new.resist, sample(which(values(new.resist) <0.2), 100, replace=T))\n## simulate\nsim.rw2 <- list()\nfor (i in 1:100) {\n  tmp <- simulate(LevyWalker, 1000,\n                  resist = raster(new.resist),\n                   coords = init[i,])\n  sim.rw2[[i]] <- cbind(tmp[,1], tmp[,2])\n}\n\n### make into vect\nsim.rw.sp2 <- lapply(sim.rw2, vect, crs = crs_risk)\n\n## plot it\nplot(riskmap); invisible(lapply(sim.rw2, FUN = lines))\n```\n\n## Homeranges  \nfor each individual calculate homerange (KD) \n```{r}\n## grid of study area\ntmp <- vect(ext(riskmap), crs=crs_risk)\nstudygrid <- SpatialKDE::create_raster(st_as_sf(tmp),\n                                       cell_size = cell_size)\n## make points into sf\nsim1sf <- st_as_sf(sim.rw.sp2[[1]], geom=\"xy\")\n\n## find kde\nkde <- SpatialKDE::kde(sim1sf, band_width = 10000, scaled = T, grid = studygrid)\n## crop to area where the individual was so not tiny\nkde.sm <- crop(kde, st_buffer(sim1sf, 2000))\nrisk.sm <- crop(riskmap, st_buffer(sim1sf, 2000))\n\n## calculate risk\nkde.risk <- rast(kde.sm)*risk.sm\n\n## check in ball park\nsum(values(risk.sm))\nsum(values(rast(kde.sm)))\nsum(values(risk.sm)*values(rast(kde.sm)))\nsum(values(kde.risk))\n\n## plots to demo\nggplot()+\n  tidyterra::geom_spatraster(data=risk.sm) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"landscape risk\")\nggplot()+\n  tidyterra::geom_spatraster(data=rast(kde.sm)) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"exposure\")\nggplot()+\n  tidyterra::geom_spatraster(data=kde.risk) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"inf. probability\")\n\n#### then redo on study grid so\nrm(tmp, studygrid, sim1sf, kde, kde.sm, risk.sm, kde.risk)\n```\n\n\nthen multiply their homerange by the \"risk\" in each cell\n\nPut that in a function and run for everyone\n```{r}\n## make a function\nmeasure_risk <- function(X, riskmap){\n  ## grid of study area\n  tmp <- vect(ext(riskmap), crs=crs_risk)\n  studygrid <- SpatialKDE::create_raster(st_as_sf(tmp),\n                                         cell_size = cell_size)\n  ## make points into sf\n  sim1sf <- lapply(X, st_as_sf, geom=\"xy\")\n  ## find kde\n  kde <- lapply(sim1sf, SpatialKDE::kde, band_width = 100, scaled = T, grid = studygrid)\n  ## convert Raster to SpatRast\n  kde <- lapply(kde, rast)\n  \n  ## multiply time in cell (kde) * cell's risk\n  new <- lapply(kde, function(i) i*riskmap)\n  ## sum of values in each layer are individual's risk\n  indiv_risk <- lapply(new, function(i) sum(values(i), na.rm=T))\n  \n  ## return a vector\n  unlist(indiv_risk)\n}\n```\n\nFind probabily of expsoure for each individual\n```{r}\n#| echo: false\n#| message: false\n## calculate individual risk for the brownian (1) and correlated (2)\nindiv_risk1 <- measure_risk(sim.rw.sp1, riskmap = riskmap)\nindiv_risk2 <- measure_risk(sim.rw.sp2, riskmap = riskmap)\n```\n\nValues in random walk \n```{r}\n## look at some of the values\nindiv_risk1[1:10]\nrange(indiv_risk1)\n```\n\nValues in corridor walk\n```{r}\nindiv_risk2[1:10]\nrange(indiv_risk2)\n```\n\n## Assisgn susceptibility  \nindividuals should have variable susceptiblity so that not everyone's probabilty of infection equals their sum\n```{r}\nsusceptbility = runif(100, 0.4, 0.5)\n```\ndataframes for the 2 types of exposures\n```{r}\nrw_risk <- data.frame(\n  id = 100:199,\n  exp_risk = indiv_risk1,\n  susceptbility = susceptbility\n)\n\ncw_risk <- data.frame(\n  id = 100:199,\n  exp_risk = indiv_risk1,\n  susceptbility = susceptbility\n)\n```\n\n## trials   \nCompare probability of infection as a function of susceptibility alone (i.e. indiv stochasiticity; Null) to susceptibility * exposure risk (i.e. does adding info of exposure risk help)?? Not sure where I am going here....need to reread note on the origional idea\n```{r}\n#| message: false\n\n## random walk indiv's should just correlate with background (e_inf)\nrw_risk$s_inf <- rbinom(100, 1, rw_risk$susceptbility*mean(rw_risk$exp_risk))\nrw_risk$e_inf <- rbinom(100, 1, rw_risk$susceptbility*rw_risk$exp_risk)\n\np1 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(rw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\n```{r}\n#| message: false\n\n## random walk indiv's should just correlate with background (e_inf)\ncw_risk$s_inf <- rbinom(100, 1, cw_risk$susceptbility*mean(cw_risk$exp_risk))\ncw_risk$e_inf <- rbinom(100, 1, cw_risk$susceptbility*cw_risk$exp_risk)\n\np1 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(cw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\n### replicate that many times  \n```{r}\ntrials <- 100\n```\n\nBrownian\n```{r}\n## random walk indiv's should just correlate with background (e_inf)\ns_inf <- replicate(trials, rbinom(100, 1, rw_risk$susceptbility*mean(rw_risk$exp_risk)))\ns_inf <- rowSums(s_inf)/trials\nrange(s_inf)\n\ne_inf <- replicate(trials, rbinom(100, 1, rw_risk$susceptbility*rw_risk$exp_risk))\ne_inf <- rowSums(e_inf)/trials\nrange(e_inf)\n\nrw_risk$s_inf <- s_inf\nrw_risk$e_inf <- e_inf\n\np1 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(rw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\") +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\nCorridor \n```{r}\n## random walk indiv's should just correlate with background (e_inf)\ns_inf <- replicate(trials, rbinom(100, 1, cw_risk$susceptbility*mean(cw_risk$exp_risk)))\ns_inf <- rowSums(s_inf)/trials\nrange(s_inf)\n\ne_inf <- replicate(trials, rbinom(100, 1, cw_risk$susceptbility*cw_risk$exp_risk))\ne_inf <- rowSums(e_inf)/trials\nrange(e_inf)\n\ncw_risk$s_inf <- s_inf\ncw_risk$e_inf <- e_inf\n\np1 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(cw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\") +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\ncompare the fit of the susceptibility * risk for the two types of walks\n```{r}\nm1 <- lm(e_inf ~ exp_risk, data=rw_risk)\nm2 <- lm(e_inf ~ exp_risk, data=cw_risk)\n\nsummary(m1)$r.squared\nsummary(m2)$r.squared\n```\nIt is worse with more variability in movement (corridor walk) but this is to be expected.\n","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n#| message: false\n\nlibrary(spDataLarge)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(SiMRiv)\nlibrary(patchwork)\n\ntheme_set(theme_bw())\ntheme_update(plot.title = element_text(hjust = 0.5))\n```\n\n## Background  \nRisk maps are used to describe the places where people (or animals) are most likely to be exposed to infectious disease. However, the time an individual spends in a place is not the only predictor of infection. The activity a person does in a location may influence if they are exposed to the disease, for example a person wearing shoes in an environment with a lot of soil transmitted helminths is at low infection risk because they are wearing shoes, thus not directly exposed to the contaminated soil. The person's immunity or susceptibility to an infection also influences their infection risk.  \nBefore creating a model with real data mapping people's land use to their infection status I want to build a simulation of how I think the model will work. First, I want to compare people that infection probabilities in people \"vibrating\" in place (Brownian motion) and to people traversing the landscape in corridors (Levian motion). I'll then use this model to test how much susceptibility can vary before there is no correlation between the time people spend in risky places and their infection risk. *Asking: Do risk maps even work given individual heterogenetiy in susceptibility?*  \n\n## Make a Risk Map  \n\nRisk across the landscape likely has a lot of spatial autocorrelation and relates to underlying environmental features. Instead of simulating this, I am using the spDataLarge elevation raster data the Zion National Park area as the *risk map*.  \n\n```{r}\nriskmap <- rast(system.file(\"raster/srtm.tif\", package = \"spDataLarge\"))\n\n## change into utm so easier to do the simulated tracks\nriskmap <- project(riskmap, \"EPSG:26912\")\n\n## make values [0,1]\nriskmap <- riskmap/2891.000\n\n## make resolution lower so things run quickly\nriskmap <- aggregate(riskmap, fact=5, fun=\"mean\")\n\n## make square\ntmp <- vect(ext(riskmap)-5000, crs=crs(riskmap))\nriskmap <- crop(riskmap, tmp)\n\n## quick plot\nplot(riskmap)\nriskmap\n\n## find dimensions of area so can choose step lengths\nrisk_bb <- ext(riskmap)\n# risk_bb[2]-risk_bb[1]\n# risk_bb[4]-risk_bb[3]\n## ~35km x 43km\n## make slightly smaller so indivdiuals not on edge\nrisk_bb <- risk_bb + c(5000, -5000, 5000, -5000)\n\n## save cell size\ncell_size = res(riskmap)[1]\n\n## save crs\ncrs_risk <- crs(riskmap)\n```\n\n## Simulate movement  \nhttps://cran.r-project.org/web/packages/SiMRiv/vignettes/SiMRiv.pdf\n\n### Brownian  \nSimulate vibrating, Brownian movement of individuals basically vibrating in place with each individuals' starting location distributed throughout the risk map area  \n\n```{r}\n## one type of movement with a random walk with step lengths relative \nrand.walker <- species(state(concentration = 0, #random\n                             pwind = perceptualRange(\"gaussian\", 1),\n                             steplen = 10,\n                             name = \"tight_random\"))\n\n## generate random starting points (might change to regular or increase n)\n### avoid edges\naoi <- buffer(vect(ext(riskmap)),-2000)\naoi <- crop(riskmap, aoi)\n\nstart_coord <- spatSample(aoi, \n                          100,\n                  method = \"random\",\n                  as.points = TRUE,\n                  values = F)\nplot(riskmap);points(start_coord)\n\n## need those as a nx2 matrix\nstart_coord_mat <- as.matrix(as.data.frame(start_coord, geom=\"xy\"))\n\n## simulate single state walks of 1000 steps\nsim.rw <- list()\nfor (i in 1:100) {\n  tmp <- simulate(rand.walker, 1000,\n                   coords = start_coord_mat[i,])\n  sim.rw[[i]] <- cbind(tmp[,1], tmp[,2])\n}\n\n### make into vect\nsim.rw.sp1 <- lapply(sim.rw, vect, crs = crs_risk)\n## plot it\n# plot(sim.rw.sp[[1]])\n# plot(riskmap); lines(sim.rw[[1]])\nplot(riskmap); invisible(lapply(sim.rw, FUN = lines))\n```\n\n### Levian (Correlated Walks)  \nNeed to make a resistance raster to get correlated walk\n```{r}\n#| message: false\n\nLevyWalker <- species(\n\t(state.RW() * 100 + 10) + (state.CRW(0.97) * 500 + 50)\n, transitionMatrix(0.005, 0.001))\n\n## basemaps for resistance\nlandcover <- resistanceFromShape(\nsystem.file(\"doc/landcover.shp\", package=\"SiMRiv\")\n, res = 50, field = \"coverclass\", mapvalues = c(\n\"forest\" = 0.5, \"urban\" = 1, \"dam\" = 0\n, \"shrubland\" = 0.75), background = 0.95)\n \nriver.shape <- sf::st_read(system.file(\"doc/river-sample.shp\", package=\"SiMRiv\"))\n\n## resistence surface\nresistance <- resistanceFromShape(system.file(\"doc/river-sample.shp\", package=\"SiMRiv\"),\n                                       baseRaster = landcover,\n                                       buffer = 100, field = 0,\n                                       background = 0.95, margin = 3000)\n# buffer here is just some magical function to convert river\n# order into a meaningful value in the [0, 1] range!\n\nplot(resistance, axes = F)\nresistance\n\n## change that to be in the same spot as the riskmap\nnew.resist <- rast(extent=ext(aoi),\n               nrow=dim(resistance)[1], ncol=dim(resistance)[2],\n               crs = crs_risk,\n               vals = values(resistance))\nnew.resist <- aggregate(new.resist, fact = 10, fun = \"mean\", na.rm = TRUE)\nplot(new.resist)\n\n## new starting coords in areas of low resistance so don't get stuck\ninit = xyFromCell(new.resist, sample(which(values(new.resist) <0.2), 100, replace=T))\n## simulate\nsim.rw2 <- list()\nfor (i in 1:100) {\n  tmp <- simulate(LevyWalker, 1000,\n                  resist = raster(new.resist),\n                   coords = init[i,])\n  sim.rw2[[i]] <- cbind(tmp[,1], tmp[,2])\n}\n\n### make into vect\nsim.rw.sp2 <- lapply(sim.rw2, vect, crs = crs_risk)\n\n## plot it\nplot(riskmap); invisible(lapply(sim.rw2, FUN = lines))\n```\n\n## Homeranges  \nfor each individual calculate homerange (KD) \n```{r}\n## grid of study area\ntmp <- vect(ext(riskmap), crs=crs_risk)\nstudygrid <- SpatialKDE::create_raster(st_as_sf(tmp),\n                                       cell_size = cell_size)\n## make points into sf\nsim1sf <- st_as_sf(sim.rw.sp2[[1]], geom=\"xy\")\n\n## find kde\nkde <- SpatialKDE::kde(sim1sf, band_width = 10000, scaled = T, grid = studygrid)\n## crop to area where the individual was so not tiny\nkde.sm <- crop(kde, st_buffer(sim1sf, 2000))\nrisk.sm <- crop(riskmap, st_buffer(sim1sf, 2000))\n\n## calculate risk\nkde.risk <- rast(kde.sm)*risk.sm\n\n## check in ball park\nsum(values(risk.sm))\nsum(values(rast(kde.sm)))\nsum(values(risk.sm)*values(rast(kde.sm)))\nsum(values(kde.risk))\n\n## plots to demo\nggplot()+\n  tidyterra::geom_spatraster(data=risk.sm) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"landscape risk\")\nggplot()+\n  tidyterra::geom_spatraster(data=rast(kde.sm)) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"exposure\")\nggplot()+\n  tidyterra::geom_spatraster(data=kde.risk) +\n  scale_fill_viridis_c(option=\"A\", direction = -1) +\n  labs(fill = \"inf. probability\")\n\n#### then redo on study grid so\nrm(tmp, studygrid, sim1sf, kde, kde.sm, risk.sm, kde.risk)\n```\n\n\nthen multiply their homerange by the \"risk\" in each cell\n\nPut that in a function and run for everyone\n```{r}\n## make a function\nmeasure_risk <- function(X, riskmap){\n  ## grid of study area\n  tmp <- vect(ext(riskmap), crs=crs_risk)\n  studygrid <- SpatialKDE::create_raster(st_as_sf(tmp),\n                                         cell_size = cell_size)\n  ## make points into sf\n  sim1sf <- lapply(X, st_as_sf, geom=\"xy\")\n  ## find kde\n  kde <- lapply(sim1sf, SpatialKDE::kde, band_width = 100, scaled = T, grid = studygrid)\n  ## convert Raster to SpatRast\n  kde <- lapply(kde, rast)\n  \n  ## multiply time in cell (kde) * cell's risk\n  new <- lapply(kde, function(i) i*riskmap)\n  ## sum of values in each layer are individual's risk\n  indiv_risk <- lapply(new, function(i) sum(values(i), na.rm=T))\n  \n  ## return a vector\n  unlist(indiv_risk)\n}\n```\n\nFind probabily of expsoure for each individual\n```{r}\n#| echo: false\n#| message: false\n## calculate individual risk for the brownian (1) and correlated (2)\nindiv_risk1 <- measure_risk(sim.rw.sp1, riskmap = riskmap)\nindiv_risk2 <- measure_risk(sim.rw.sp2, riskmap = riskmap)\n```\n\nValues in random walk \n```{r}\n## look at some of the values\nindiv_risk1[1:10]\nrange(indiv_risk1)\n```\n\nValues in corridor walk\n```{r}\nindiv_risk2[1:10]\nrange(indiv_risk2)\n```\n\n## Assisgn susceptibility  \nindividuals should have variable susceptiblity so that not everyone's probabilty of infection equals their sum\n```{r}\nsusceptbility = runif(100, 0.4, 0.5)\n```\ndataframes for the 2 types of exposures\n```{r}\nrw_risk <- data.frame(\n  id = 100:199,\n  exp_risk = indiv_risk1,\n  susceptbility = susceptbility\n)\n\ncw_risk <- data.frame(\n  id = 100:199,\n  exp_risk = indiv_risk1,\n  susceptbility = susceptbility\n)\n```\n\n## trials   \nCompare probability of infection as a function of susceptibility alone (i.e. indiv stochasiticity; Null) to susceptibility * exposure risk (i.e. does adding info of exposure risk help)?? Not sure where I am going here....need to reread note on the origional idea\n```{r}\n#| message: false\n\n## random walk indiv's should just correlate with background (e_inf)\nrw_risk$s_inf <- rbinom(100, 1, rw_risk$susceptbility*mean(rw_risk$exp_risk))\nrw_risk$e_inf <- rbinom(100, 1, rw_risk$susceptbility*rw_risk$exp_risk)\n\np1 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(rw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\n```{r}\n#| message: false\n\n## random walk indiv's should just correlate with background (e_inf)\ncw_risk$s_inf <- rbinom(100, 1, cw_risk$susceptbility*mean(cw_risk$exp_risk))\ncw_risk$e_inf <- rbinom(100, 1, cw_risk$susceptbility*cw_risk$exp_risk)\n\np1 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(cw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\",\n              method.args=list(family=\"binomial\")) +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\n### replicate that many times  \n```{r}\ntrials <- 100\n```\n\nBrownian\n```{r}\n## random walk indiv's should just correlate with background (e_inf)\ns_inf <- replicate(trials, rbinom(100, 1, rw_risk$susceptbility*mean(rw_risk$exp_risk)))\ns_inf <- rowSums(s_inf)/trials\nrange(s_inf)\n\ne_inf <- replicate(trials, rbinom(100, 1, rw_risk$susceptbility*rw_risk$exp_risk))\ne_inf <- rowSums(e_inf)/trials\nrange(e_inf)\n\nrw_risk$s_inf <- s_inf\nrw_risk$e_inf <- e_inf\n\np1 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(rw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(rw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\") +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\nCorridor \n```{r}\n## random walk indiv's should just correlate with background (e_inf)\ns_inf <- replicate(trials, rbinom(100, 1, cw_risk$susceptbility*mean(cw_risk$exp_risk)))\ns_inf <- rowSums(s_inf)/trials\nrange(s_inf)\n\ne_inf <- replicate(trials, rbinom(100, 1, cw_risk$susceptbility*cw_risk$exp_risk))\ne_inf <- rowSums(e_inf)/trials\nrange(e_inf)\n\ncw_risk$s_inf <- s_inf\ncw_risk$e_inf <- e_inf\n\np1 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=s_inf))+\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              col=\"#619CFF\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility only\")\n\np2 <- ggplot(cw_risk) +\n  geom_point(aes(x=exp_risk, y=e_inf))+\n  geom_smooth(aes(x=exp_risk, y=e_inf),\n              col=\"#F8766D\",\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Susceptibility * Risk\")\np3 <- ggplot(cw_risk) +\n  geom_smooth(aes(x=exp_risk, y=s_inf, col=\"without risk\"),\n              se=F,\n              method=\"glm\") +\n  geom_smooth(aes(x=exp_risk, y=e_inf, col=\"with risk\"),\n              se=F,\n              method=\"glm\") +\n  labs(x=\"Exposure risk\", y = \"infection\",\n       col=NULL,\n       title=\"Comparison\")\n\n((p1 | p2)/ p3) + plot_layout(guides = 'collect')\n```\n\ncompare the fit of the susceptibility * risk for the two types of walks\n```{r}\nm1 <- lm(e_inf ~ exp_risk, data=rw_risk)\nm2 <- lm(e_inf ~ exp_risk, data=cw_risk)\n\nsummary(m1)$r.squared\nsummary(m2)$r.squared\n```\nIt is worse with more variability in movement (corridor walk) but this is to be expected.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"pulse","title-block-banner":true,"title":"Simulation of Realized Infection Risk","description":"simulate a probability distribution of risk","author":[{"name":"Kayla Kauffman","url":"https://https://kmkauffm.github.io/","orcid":"0000-0002-4897-9428"}],"date":"2023-11-29","categories":["R","code","simulations"],"citation":{"url":"https://https://kmkauffm.github.io//posts/2023-11-29-realizedrisk/"},"image":"schema.png","draft":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}